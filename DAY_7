PROGRAM-01
#include<stdio.h>
int mystrlen(char str[30]);
int main()
{
 char str[30];
 int i, len;

 printf("Enter string:\n");
 gets(str);

 len = mystrlen(str); 
 printf("Length of given string is: %d", len);

 return 0;
}
int mystrlen(char str[30])
{
 int i, len=0;

 for(i=0;str[i]!='\0';i++)
 {
  len++;
 }

 return(len);
}

PROGRAM-02
#include <stdio.h>
#include <conio.h>
#include <string.h>
void main(){

   char string[20],temp;

   int i,length;

   printf("Enter String : ");

   scanf("%s",string);

   length=strlen(string)-1;

   for(i=0;i<strlen(string)/2;i++){

      temp=string[i];

      string[i]=string[length];

      string[length--]=temp;

   }

   printf("\nReverse string :%s",string);

   getch();

}


PROGRAM-03

#include <stdio.h>
#include <string.h>
void isPalindrome(char str[])
{
	int l = 0;
	int h = strlen(str) - 1;
	while (h > l)
	{
		if (str[l++] != str[h--])
		{
			printf("%s is not a palindrome\n", str);
			return;
		}
	}
	printf("%s is a palindrome\n", str);
}
int main()
{
	isPalindrome("abba");
	isPalindrome("abbccbba");
	isPalindrome("geeks");
	return 0;
}


PROGRAM-04

#include <stdio.h>
#include <string.h>
 
void main()
{
    char s[200];
    int count = 0, i;
 
    printf("Enter the string:\n");
    scanf("%[^\n]s", s);
    for (i = 0;s[i] != '\0';i++)
    {
        if (s[i] == ' ' && s[i+1] != ' ')
            count++;    
    }
    printf("Number of words in given string are: %d\n", count + 1);
}

PROGRAM-05

#include <stdio.h>
#include <string.h>
//lower to uppercase
int main() {
   char s[100];
   int i;
   printf("
Enter a string : ");
   gets(s);

   for (i = 0; s[i]!='\0'; i++) {
      if(s[i] >= 'a' && s[i] <= 'z') {
         s[i] = s[i] - 32;
      }
   }
   printf("
String in Upper Case = %s", s);



//uppercase to lower case
   char s[100];
   int i;

   printf("
Enter a string : ");
   gets(s);

   for (i = 0; s[i]!='\0'; i++) {
      if(s[i] >= 'A' && s[i] <= 'Z') {
         s[i] = s[i] + 32;
      }
   }

   printf("
String in Lower Case = %s", s);
   return 0;
}

PROGRAM-06
#include <stdio.h>  
#include<string.h>  
int main()  
{  
   char str1[20];
   char str2[20];    
   int value;  
   printf("Enter the first string : ");  
   scanf("%s",str1);  
   printf("Enter the second string : ");  
   scanf("%s",str2);  
   value=strcmp(str1,str2);  
   if(value==0)  
   printf("strings are same");  
   else  
   printf("strings are not same");  
   return 0;  
}  


PROGRAM-07
#include <stdio.h>
int main() {
  char s1[100] = "programming ", s2[] = "is awesome";
  int length, j;

  // store length of s1 in the length variable
  length = 0;
  while (s1[length] != '\0') {
    ++length;
  }

  // concatenate s2 to s1
  for (j = 0; s2[j] != '\0'; ++j, ++length) {
    s1[length] = s2[j];
  }

  // terminating the s1 string
  s1[length] = '\0';

  printf("After concatenation: ");
  puts(s1);

  return 0;
}

PROGRAM-13
#include<stdio.h>
#include<string.h>
main(){
   int i,j,n;
   char str[100][100],s[100];
   printf("Enter number of names :
");
   scanf("%d",&n);
   printf("Enter names in any order:
");
   for(i=0;i<n;i++){
      scanf("%s",str[i]);
   }
   for(i=0;i<n;i++){
      for(j=i+1;j<n;j++){
         if(strcmp(str[i],str[j])>0){
            strcpy(s,str[i]);
            strcpy(str[i],str[j]);
            strcpy(str[j],s);
         }
      }
   }
   printf("
The sorted order of names are:
");
   for(i=0;i<n;i++){
      printf("%s
",str[i]);
   }
}

PROGRAM-12
// C++ implementation of the approach
#include <bits/stdc++.h>
using namespace std;

// Function that returns true if str
// is a valid identifier
bool isValid(string str, int n)
{

	// If first character is invalid
	if (!((str[0] >= 'a' && str[0] <= 'z')
		|| (str[0] >= 'A' && str[0] <= 'Z')
		|| str[0] == '_'))
		return false;

	// Traverse the string for the rest of the characters
	for (int i = 1; i < str.length(); i++) {
		if (!((str[i] >= 'a' && str[i] <= 'z')
			|| (str[i] >= 'A' && str[i] <= 'Z')
			|| (str[i] >= '0' && str[i] <= '9')
			|| str[i] == '_'))
			return false;
	}

	// String is a valid identifier
	return true;
}

// Driver code
int main()
{
	string str = "_geeks123";
	int n = str.length();

	if (isValid(str, n))
		cout << "Valid";
	else
		cout << "Invalid";

	return 0;
}


PROGRAM-11


#include <stdio.h>

void removeLeading(char *str, char *str1)
{
	int idx = 0, j, k = 0;

	// Iterate String until last
	// leading space character
	while (str[idx] == ' ' || str[idx] == '\t' || str[idx] == '\n')
	{
		idx++;
	}

	// Run a for loop from index until the original
	// string ends and copy the content of str to str1
	for (j = idx; str[j] != '\0'; j++)
	{
		str1[k] = str[j];
		k++;
	}

	// Insert a string terminating character
	// at the end of new string
	str1[k] = '\0';

	// Print the string with no whitespaces
	printf("%s", str1);
}


PROGRAM-10

#include <stdio.h>
int main() {
    char str[1000], ch;
    int count = 0;

    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);

    printf("Enter a character to find its frequency: ");
    scanf("%c", &ch);

    for (int i = 0; str[i] != '\0'; ++i) {
        if (ch == str[i])
            ++count;
    }

    printf("Frequency of %c = %d", ch, count);
    return 0;
}
